name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  manifest_secret: deployment-manifest
  approved_manifest: approved-release-manifest
  PARAM_MAP: |
        "approvers": "sanjit2appscrip"
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build" The type of runner that the job will run on

  get_name: 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
  get_approver_name:
    name: Get the Name of the Manifest Approver
    runs-on: ubuntu-latest
    environment:
      name: team-manifest-approver
    outputs:
      approver: ${{ steps.extract-approver.outputs.approver }}
      is_qadeployer: ${{ steps.check-approver.outputs.is_qadeployer }}
    steps:
      - name: Create approving request
        run: |
          gh api \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/issues \
            -f title='Approval Needed' \
            -f body='Please approve the changes.' \
            -f assignees='sanjit2appscrip'
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
      - name: echo github event details
        run: |
          echo ${{ github.event }}
          echo ${{ github.repository_owner }}
          echo ${{ github.event.repository.name }}
          echo ${{ github.run_id }}
          
      - name: Extract Approver Name
        id: extract-approver
        run: |
          payload=$(gh api \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            /repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{github.run_id}}/approvals )
          echo $payload
          approver=$(echo "$payload" | jq -r '.[].user.login')
          echo "approver=$approver" >>  $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Runs a single command using the runners shell
      # - name: Get team members
      #   id: get-members
      - name: Check if Approver is in QADeployers Team
        id: check-approver
        run: |
          team_members=$(curl -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/orgs/bayer-int )
          echo $team_members
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

  logs-download:
    runs-on: ubuntu-latest
    outputs:
      job_id: ${{steps.job_id.outputs.job_id}}
    steps:               
         - name: Download Workflow Logs
           run: |
           
            curl -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -o workflow_logs.txt \
              https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/runs/${{ github.run_id }}/logs
         - name: get logs
           run: |
              ls -all
              cat workflow_logs.txt
  
         - name: job_id
           id: job_id
           run: |
              JOB_ID=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                   -H "Accept: application/vnd.github+json" \
                   "https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs")

              echo $JOB_ID
              job_id=$(echo "$JOB_ID" | jq '.jobs[] | select(.name == "logs-download") | .id')
              echo $job_id
              echo "job_id=$job_id" >>  $GITHUB_OUTPUT
              
  rerun-job:
    runs-on: ubuntu-latest
    needs:  logs-download
    steps: 
       - name: restart
         run: |
              echo "The job ID is ${{ needs.logs-download.outputs.job_id }}"
              curl -L \
                  -X POST \
                  -H "Accept: application/vnd.github+json" \
                  -H "Authorization: Bearer ${{ secrets.GIT_TOKEN }}" \
                  -H "X-GitHub-Api-Version: 2022-11-28" \
                  https://api.github.com/repos/${{ github.repository_owner }}/${{ github.event.repository.name }}/actions/jobs/${{ needs.logs-download.outputs.job_id }}/rerun
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2.0.0
  #     - name: Download 24hrs Old Logs
  #       uses: pawanbahuguna/action-logs/@v1.0.1
  #       env: 
  #         GH_TOKEN: ${{ secrets.GH_TOKEN }}
  #         GH_REPO: ${{ github.repository }}
  #     - uses: actions/checkout@v2.0.0
  #     - name: get Old Logs
  #       run: |
  #          ls
  #          ls -all 
